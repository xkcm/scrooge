@use "sass:math";

$baseIconSize: 24px;

@function scaleIcon($destinationSize) {
  @return math.div($destinationSize, $baseIconSize);
}

@mixin defaultOutlineOnFocus {
  outline: 2px getColor(beta) solid;
}

@mixin useColorSet($colorName, $weight: 400) {
  @include useTextColor($colorName, $weight);
  @include useBgColor($colorName, $weight);
}

@mixin useBgColor($colorName, $weight: 400) {
  background-color: getColor($colorName, $weight);
}

@mixin useTextColor($colorName, $weight: 400) {
  color: getTextColor($colorName, $weight);
}

@function getColor($colorName, $weight: 400) {
  @return var(--color-#{$colorName}-#{$weight});
}

@function getTextColor($colorName, $weight: 400) {
  @return var(--text-color-#{$colorName}-#{$weight});
}

@mixin generateColorShades(
  $baseColor,
  $baseColorName,
  $step: 6%,
  $brighterShadesNo: 3,
  $darkerShadesNo: 3
) {
  @for $i from $brighterShadesNo through 1 {
    $weight: 400 - $i * 100;
    $shadeColor: lighten($baseColor, $step * $i);
    --color-#{$baseColorName}-#{$weight}: #{$shadeColor};
  }
  --color-#{$baseColorName}-400: #{$baseColor};
  @for $i from 1 through $darkerShadesNo {
    $weight: 400 + $i * 100;
    $shadeColor: darken($baseColor, $step * $i);
    --color-#{$baseColorName}-#{$weight}: #{$shadeColor};
  }
}
